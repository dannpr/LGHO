"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountOrClientNotFoundError = exports.signUserOperationHashWithECDSA = exports.walletClientToCustomSigner = exports.getRequiredPrefund = exports.getUserOperationHash = exports.getAction = exports.deepHexlify = exports.transactionReceiptStatus = exports.parseAccount = void 0;
const deepHexlify_js_1 = require("./deepHexlify.js");
Object.defineProperty(exports, "deepHexlify", { enumerable: true, get: function () { return deepHexlify_js_1.deepHexlify; } });
Object.defineProperty(exports, "transactionReceiptStatus", { enumerable: true, get: function () { return deepHexlify_js_1.transactionReceiptStatus; } });
const getAction_js_1 = require("./getAction.js");
Object.defineProperty(exports, "getAction", { enumerable: true, get: function () { return getAction_js_1.getAction; } });
const getRequiredPrefund_js_1 = require("./getRequiredPrefund.js");
Object.defineProperty(exports, "getRequiredPrefund", { enumerable: true, get: function () { return getRequiredPrefund_js_1.getRequiredPrefund; } });
const getUserOperationHash_js_1 = require("./getUserOperationHash.js");
Object.defineProperty(exports, "getUserOperationHash", { enumerable: true, get: function () { return getUserOperationHash_js_1.getUserOperationHash; } });
const signUserOperationHashWithECDSA_js_1 = require("./signUserOperationHashWithECDSA.js");
Object.defineProperty(exports, "AccountOrClientNotFoundError", { enumerable: true, get: function () { return signUserOperationHashWithECDSA_js_1.AccountOrClientNotFoundError; } });
Object.defineProperty(exports, "signUserOperationHashWithECDSA", { enumerable: true, get: function () { return signUserOperationHashWithECDSA_js_1.signUserOperationHashWithECDSA; } });
const walletClientToCustomSigner_js_1 = require("./walletClientToCustomSigner.js");
Object.defineProperty(exports, "walletClientToCustomSigner", { enumerable: true, get: function () { return walletClientToCustomSigner_js_1.walletClientToCustomSigner; } });
function parseAccount(account) {
    if (typeof account === "string")
        return { address: account, type: "json-rpc" };
    return account;
}
exports.parseAccount = parseAccount;
//# sourceMappingURL=index.js.map